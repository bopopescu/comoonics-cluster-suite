#!/usr/bin/python

# here is some internal information

__version__ = "$revision$"
__description__="""
Programm to rescan the scsibus
"""

import sys

import os.path
sys.path.append(os.path.join(os.path.normpath(sys.prefix), "lib", "python" + sys.version[:3], "site-packages"))

from comoonics import ComLog
from comoonics.scsi import ComSCSI

try:
   from comoonics.tools.poptparse import PersistentOptionParser as OptionParser
except ImportError:
   from optparse import OptionParser 
from optparse import OptionGroup

import logging
logging.basicConfig()

log=ComLog.getLogger("com-rescanscsi")

def line(str=None):
   print
   print "--------------------"+str+"---------------------------------"

def fibreChannel(option, opt, value, parser):
   hosts=ComSCSI.getFCHosts()
   log.debug("hosts %s" %(hosts))


hosts=None
parser = OptionParser(description=__doc__, usage="usage: %prog [options] [host]*")
parser.add_option("-d", "--verbose",  default=False,         action="store_true", help="toggle debugmode and be more helpful")
parser.add_option("-F", "--fibre",    callback=fibreChannel, action="callback",   help="scan only fibre channel hbas")
parser.add_option("-q", "--qlogic",   default=False,         action="store_true", help="scan qlogichbas with old qlogic way")
parser.add_option("-r", "--remove",   default=False,         action="store_true", help="only remove scsidisks")
parser.add_option("-a", "--add",      default=False,         action="store_true", help="only add scsidisks")

try:
   parser.setGlobalDefaultsFilename(get_defaultsfiles()[0])
   parser.setLocalDefaultsFilename(get_defaultsfiles()[1], get_defaultsenvkey())
except (TypeError, NameError):
   pass

(options, args) = parser.parse_args()

if options.verbose:
   ComLog.getLogger().propagate=1
   ComLog.setLevel(logging.DEBUG)
else:
   ComLog.setLevel(logging.INFO)

import os.path
if len(args) >= 0:
   if not hosts:
      hosts=args

if not hosts and not options.qlogic:
   hosts=ComSCSI.getSCSIHosts()
if not hosts and options.qlogic:
   options.hosts=ComSCSI.getQlaHosts()
for host in hosts:
   log.info("Rescanning "+host)
   if not options.qlogic:
      ComSCSI.rescan(host, not options.remove, not options.add)
   else:
      ComSCSI.rescan_qla(host, not options.remove, not options.add)
