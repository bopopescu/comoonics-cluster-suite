#!/usr/bin/python
"""Com.oonics Checkqnodes

Checks if all nodes in this cluster are reachable until a given timeout occures.

"""

# here is some internal information
# $Id: com-ec,v 1.5 2006/08/28 15:58:36 marc Exp $
#

__version__ = "$Revision: 1.5 $"
# $Source: /usr/ATIX/CVSROOT/nashead2004/management/comoonics-clustersuite/python/bin/com-ec,v $

from exceptions import Exception
import sys
import xml.dom
from xml.dom.ext import PrettyPrint
from xml.dom.ext.reader import Sax2
import getopt
import logging
import warnings

from optparse import OptionParser
import os.path
sys.path.append(os.path.join(os.path.normpath(sys.prefix), "lib", "python" + sys.version[:3], "site-packages"))
sys.path.append("../lib")

logging.basicConfig()

from comoonics.cluster import parseClusterConf, commonoptparseroptions
from comoonics import ComSystem, ComLog
from xml import xpath

ComSystem.__EXEC_REALLY_DO=""

usage = "usage: %prog [options]"
parser = OptionParser(usage=usage, description=__doc__)
parser=commonoptparseroptions(parser)

parser.add_option("-T", "--times", dest="times", default="5", help="checks the whole cluster for n times. If not  all nodes are reachable it returns with an errorcode. Default: %default.")
parser.add_option("-t", "--pingtimeout", dest="pingtimeout", default="2", help="the ping timeout. Default: %default.")
parser.add_option("-n", "--pingcount", dest="pingcount", default="1", help="the ping counts. Default: %default.")
parser.add_option("-C", "--pingcmd", dest="pingcmd", default="ping -c %s -t %s %s", help="Which command is used for pings. Default: %default.")
parser.add_option("-p", "--pathnodes", dest="pathnodes", default="cluster/clusternodes/clusternode/@name", help="How can we know the names of the nodes. Default: %default.")
parser.add_option("-q", "--pathqdisk", dest="pathqdisk", default="cluster/quorumd", help="Where to find the configuration for the qdisk. Default: %default.")
parser.add_option("-P", "--pathclustername", dest="pathclustername", default="cluster/@name", help="How can we know the name of the cluster. Default: %default.")

ComLog.setLevel(logging.INFO)
(options, args) = parser.parse_args()

doc=parseClusterConf(options.clusterconf)
ComLog.getLogger().debug("Parsing path %s" % options.pathnodes)
clustername = xpath.Evaluate(options.pathclustername, doc)[0]
nodeelements = xpath.Evaluate(options.pathnodes, doc)
qdiskelement = xpath.Evaluate(options.pathqdisk, doc)
if len(nodeelements) == 2 and len(qdiskelement)==0:
    quorum=len(nodeelements)/2+1
else:
    print "Skipping because cluster %s has less or more the two nodes." %clustername.value
    sys.exit(0)
ComLog.getLogger().debug("Found nodes %u/%u" % (len(nodeelements),quorum))
sys.stdout.write("Checking cluster %s" % clustername.value)
sys.stdout.flush()
for times in range(int(options.times)):
    reached=0 # Have already reached myself
    for node in nodeelements:
        sys.stdout.write(".")
        sys.stdout.flush()
        nodename=node.nodeValue
        ComLog.getLogger().debug("Found node %s, reached: %u" % (nodename, reached))
        (rc, out) = ComSystem.execLocalStatusOutput(options.pingcmd %(options.pingcount, options.pingtimeout, nodename))
        if rc >> 8 == 0:
            reached=reached+1
        if reached>=quorum:
            break
    if reached>=quorum:
        break

if reached>=quorum:
    print("OK")
    sys.exit(0)
else:
    print("FAILED")
    sys.exit(1)

##################
# $Log: com-ec,v $
